% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datasets_to_sqlite.R
\name{datasets_to_sql}
\alias{datasets_to_sql}
\title{Build a data warehouse of all datasets in one line}
\usage{
datasets_to_sql(
  con,
  dataset_accessors = available_datasets()$accessor,
  overwrite = TRUE,
  ...
)
}
\arguments{
\item{con}{a remote data source. See \code{\link[dplyr:copy_to]{dplyr::copy_to()}}}

\item{dataset_accessors}{character() vector of accessors for datasets.
The \code{accessor} column of \code{\link[=available_datasets]{available_datasets()}} is the default, meaning
that all data.frame-like datasets will be written to the SQL destination.}

\item{overwrite}{If TRUE, will overwrite an existing table with name
name. If FALSE, will throw an error if name already
exists.}

\item{\dots}{passed on to \code{\link[dplyr:copy_to]{dplyr::copy_to()}}}
}
\value{
used for side effects
}
\description{
SQL databases are the cornerstone of many data science efforts.
We provide this simple function to export all the available
datasets in \code{available_datasets()} to any relational database
supported by dbplyr.
}
\details{
Create connections using RSQLite::SQLite() for RSQLite, RMariaDB::MariaDB() for
RMariaDB, RPostgres::Postgres() for RPostgres, odbc::odbc() for
odbc, and bigrquery::bigquery() for BigQuery.
}
\examples{
if(requireNamespace("RSQLite", quietly=TRUE) 
   & requireNamespace("DBI", quietly=TRUE)) {
  sql = DBI::dbConnect(RSQLite::SQLite(), ':memory:')
  datasets_to_sql(sql, dataset_accessors = "coronadatascraper_data")
  DBI::dbListTables(sql)
  DBI::dbDisconnect(sql)
} else {
  print("install.packages('RSQLite') to run this example")
}

}
\seealso{
\code{\link[dplyr:copy_to]{dplyr::copy_to()}}
}
\author{
Sean Davis \href{mailto:seandavi@gmail.com}{seandavi@gmail.com}
}
\concept{data-export}
