% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_epicurve.R
\name{plot_epicurve}
\alias{plot_epicurve}
\title{Plot a (set of) epidemic curve(s)}
\usage{
plot_epicurve(
  df,
  date_column = "date",
  case_column = "count",
  ...,
  log = TRUE,
  shift = FALSE
)
}
\arguments{
\item{df}{a data frame with columns that include at
least a date column and an integer count column}

\item{date_column}{character(1) the column name of the \code{date} type column}

\item{case_column}{character(1) the column name of the \verb{count of cases} column}

\item{log}{logical(1) TRUE for log10 based y-scale, FALSE for linear}
}
\description{
\code{plot_epicurve} is a simplifying wrapper around ggplot to
produce curves of cumulative cases versus time. The input
data frame should contain at least:
}
\details{
\itemize{
\item a date column (or any data type that has a natural time order); this will become the x-axis
\item a cumulative \code{count} column; this will become the y-axis
\item an optional grouping column to produce multiple colored curves; y-axis curves will be colored by this column
}
}
\examples{
library(dplyr)
jhu = jhu_data() \%>\% 
    filter(CountryRegion \%in\% c('US','Italy',"China") & subset=='confirmed') \%>\% 
    group_by(CountryRegion,date) \%>\% summarize(count=sum(count)) 
    
jhu \%>\% plot_epicurve(log=FALSE)
jhu \%>\% plot_epicurve(grouping_column='CountryRegion')
jhu \%>\% plot_epicurve(grouping_column='CountryRegion', log=TRUE)


}
